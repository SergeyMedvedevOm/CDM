#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс 

Процедура ОбработатьОчередьСообщений() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	um_ОчередьСообщений.ИдентификаторСообщения КАК ИдентификаторСообщения,
		|	um_ОчередьСообщений.ДатаСообщения КАК ДатаСообщения,
		|	um_ОчередьСообщений.ИдентификаторОбъекта КАК ИдентификаторОбъекта,
		|	um_ОчередьСообщений.ТекстЗапроса КАК ТекстЗапроса,
		|	um_ОчередьСообщений.ОбъектМетаданных КАК ОбъектМетаданных,
		|	um_ОчередьСообщений.ОбъектМетаданных.НаименованиеПолное КАК НаименованиеПолное,
		|	um_ОчередьСообщений.ОбъектМетаданных.ИменаРеквизитовТипаДата КАК ИменаРеквизитовТипаДата,
		|	um_ОчередьСообщений.ОбъектМетаданных.ИменаТабличныхЧастей КАК ИменаТабличныхЧастей,
		|	um_ОчередьСообщений.ОбъектМетаданных.СсылочныеТипы КАК СсылочныеТипы,
		|	um_ОчередьСообщений.ОбъектМетаданных.ОбработчикПередЗаписью КАК ОбработчикПередЗаписью,
		|	um_ОчередьСообщений.ОбъектМетаданных.ОбработчикПриЗаписи КАК ОбработчикПриЗаписи
		|ИЗ
		|	РегистрСведений.um_ОчередьСообщений КАК um_ОчередьСообщений
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.um_РезультатОбработкиСообщений КАК um_РезультатОбработкиСообщений
		|		ПО um_ОчередьСообщений.ИдентификаторСообщения = um_РезультатОбработкиСообщений.ИдентификаторСообщения
		|			И um_ОчередьСообщений.ДатаСообщения = um_РезультатОбработкиСообщений.ДатаСообщения
		|ГДЕ
		|	(um_РезультатОбработкиСообщений.Обработан ЕСТЬ NULL
		|			ИЛИ НЕ ЕСТЬNULL(ВЫРАЗИТЬ(um_РезультатОбработкиСообщений.ТекстОшибки КАК СТРОКА(100)), """") = """")";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать(); 
	Пока Выборка.Следующий() Цикл
		
		ТекстОшибки = "";             
		ПараметрыОбъекта = Новый Структура;
		ПараметрыОбъекта.Вставить("ИдентификаторОбъекта", Выборка.ИдентификаторОбъекта);
		ПараметрыОбъекта.Вставить("ТекстЗапроса", Выборка.ТекстЗапроса);  
		ПараметрыОбъекта.Вставить("НаименованиеПолное", Выборка.НаименованиеПолное);
		ПараметрыОбъекта.Вставить("ИменаРеквизитовТипаДата", СтрРазделить(Выборка.ИменаРеквизитовТипаДата, ",", Ложь));
		ПараметрыОбъекта.Вставить("ИменаТабличныхЧастей", СтрРазделить(Выборка.ИменаТабличныхЧастей, ",", Ложь));
		ПараметрыОбъекта.Вставить("СсылочныеТипы", ?(ЗначениеЗаполнено(Выборка.СсылочныеТипы), um_httpСервис.JSONПрочитать(Выборка.СсылочныеТипы), "")); 
		ПараметрыОбъекта.Вставить("ОбработчикПередЗаписью", Выборка.ОбработчикПередЗаписью);
		ПараметрыОбъекта.Вставить("ОбработчикПриЗаписи", Выборка.ОбработчикПриЗаписи);
		
		ЗаполнитьОбъект(ПараметрыОбъекта, ТекстОшибки);  	
			
		РезультатОбработки = РегистрыСведений.um_РезультатОбработкиСообщений.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(РезультатОбработки, Выборка);  	
		РезультатОбработки.Обработан = ?(ТекстОшибки = "", Истина, Ложь);
		РезультатОбработки.ТекстОшибки = ТекстОшибки;
		РезультатОбработки.Записать();     	 
		
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьОбъект(ПараметрыОбъекта, ТекстОшибки, ОбъектЗаполнения = Неопределено) Экспорт   
	
	Если Не ЗначениеЗаполнено(ОбъектЗаполнения) Тогда
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПараметрыОбъекта.НаименованиеПолное);
		Если Лев(ПараметрыОбъекта.НаименованиеПолное,8) = "Документ" Тогда
			ОбъектЗаполнения = МенеджерОбъекта.СоздатьДокумент();
		Иначе
			ОбъектЗаполнения = МенеджерОбъекта.СоздатьЭлемент();	
		КонецЕсли;
		ОбъектЗаполнения.УстановитьСсылкуНового(МенеджерОбъекта.ПолучитьСсылку(ПараметрыОбъекта.ИдентификаторОбъекта));   
	Иначе
		ОбъектЗаполнения = ОбъектЗаполнения.ПолучитьОбъект();
	КонецЕсли;
	
	РеквизитыЗапроса = um_httpСервис.JSONПрочитать(ПараметрыОбъекта.ТекстЗапроса, ПараметрыОбъекта.ИменаРеквизитовТипаДата);
	Если ТипЗнч(РеквизитыЗапроса) = Тип("Массив") Тогда
		РеквизитыЗапроса = РеквизитыЗапроса[0]; //TODO заполнение произвольного количества объектов
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ОбъектЗаполнения, РеквизитыЗапроса);  
	
	Если Не ПараметрыОбъекта.СсылочныеТипы = "" Тогда
		ЗначенияСсылочныхТипов = Новый Структура;
		СсылочныеТипы = ПараметрыОбъекта.СсылочныеТипы; 
		Для каждого Реквизит Из СсылочныеТипы Цикл
			ГУИД = Неопределено; 
			Если Не Лев(Реквизит.Значение, 12) = "Перечисление" Тогда
				Если РеквизитыЗапроса.Свойство(Реквизит.Ключ, ГУИД) И СтроковыеФункцииКлиентСервер.ЭтоУникальныйИдентификатор(ГУИД) Тогда
					ЗначенияСсылочныхТипов.Вставить(Реквизит.Ключ, ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(Реквизит.Значение).ПолучитьСсылку(Новый УникальныйИдентификатор(ГУИД))); 	
				КонецЕсли; 			          
			Иначе                            
				Если РеквизитыЗапроса.Свойство(Реквизит.Ключ + "Представление") Тогда
					ИмяПеречисления = СтрЗаменить(Реквизит.Значение, "Перечисление.", "");
					ЗначениеПеречисления = ЗначениеПеречисленияПоСинониму(РеквизитыЗапроса[Реквизит.Ключ + "Представление"], ИмяПеречисления); 
					ЗначенияСсылочныхТипов.Вставить(Реквизит.Ключ, ЗначениеПеречисления);
				КонецЕсли;
			КонецЕсли
		КонецЦикла;  
		ЗаполнитьЗначенияСвойств(ОбъектЗаполнения, ЗначенияСсылочныхТипов);
	КонецЕсли; 
	
	МассивИменТЧ = ПараметрыОбъекта.ИменаТабличныхЧастей; 		
	Для Каждого ТабЧасть Из МассивИменТЧ Цикл
		
		СтрокиТабЧасти = Неопределено;
		Если РеквизитыЗапроса.Свойство(ТабЧасть, СтрокиТабЧасти) Тогда
			Для каждого СтрокаТабЧасти Из СтрокиТабЧасти Цикл
				
				НоваяСтр = ОбъектЗаполнения[ТабЧасть].Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтр, СтрокаТабЧасти); 
				
				Для каждого Реквизит Из СтрокаТабЧасти Цикл             
					Если СсылочныеТипы.Свойство(ТабЧасть+"_"+Реквизит.Ключ) Тогда 
						Если Не Лев(СсылочныеТипы[ТабЧасть+"_"+Реквизит.Ключ], 12) = "Перечисление" Тогда 
							Если СтроковыеФункцииКлиентСервер.ЭтоУникальныйИдентификатор(Реквизит.Значение) Тогда 
								НоваяСтр[Реквизит.Ключ] = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СсылочныеТипы[ТабЧасть+"_"+Реквизит.Ключ]).ПолучитьСсылку(Новый УникальныйИдентификатор(Реквизит.Значение));	
							КонецЕсли;   
						Иначе
							Если СтрокаТабЧасти.Свойство(Реквизит.Ключ + "Представление") Тогда
								ИмяПеречисления = СтрЗаменить(СсылочныеТипы[ТабЧасть+"_"+Реквизит.Ключ], "Перечисление.", "");
								ЗначениеПеречисления = ЗначениеПеречисленияПоСинониму(СтрокаТабЧасти[Реквизит.Ключ + "Представление"], ИмяПеречисления); 
								НоваяСтр[Реквизит.Ключ] = ЗначениеПеречисления;									
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла; 
	
	Если Лев(ПараметрыОбъекта.НаименованиеПолное,8) = "Документ" И ОбъектЗаполнения.ЭтоНовый() Тогда
		ОбъектЗаполнения.Дата = ТекущаяДатаСеанса();
		ОбъектЗаполнения.УстановитьНовыйНомер();				
	КонецЕсли;
	
	Если РеквизитыЗапроса.Свойство("ДополнительныеСвойства") Тогда
		Для каждого ДопСвойство Из РеквизитыЗапроса.ДополнительныеСвойства Цикл
			ОбъектЗаполнения.ДополнительныеСвойства.Вставить(ДопСвойство.Ключ, ДопСвойство.Значение);	
		КонецЦикла;
	КонецЕсли; 
	
	ДополнительнаяОбработкаОбъекта("ПередЗаписью", ОбъектЗаполнения, ПараметрыОбъекта, РеквизитыЗапроса); 
	
	НачатьТранзакцию();	
	Попытка 
			
		ОбъектЗаполнения.Записать();
		ПараметрыОбъекта.ИдентификаторОбъекта = ОбъектЗаполнения.Ссылка.УникальныйИдентификатор();  
		
		ДополнительнаяОбработкаОбъекта("ПриЗаписи", ОбъектЗаполнения, ПараметрыОбъекта, РеквизитыЗапроса);
		
		ЗафиксироватьТранзакцию();
	Исключение     
		ОтменитьТранзакцию();
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());			
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции  

Процедура ДополнительнаяОбработкаОбъекта(ВидОбработчика, ОбрабатываемыйОбъект, ПараметрыОбъекта, РеквизитыЗапроса)
	
	Если Не ЗначениеЗаполнено(ПараметрыОбъекта["Обработчик" + ВидОбработчика]) Тогда
		Возврат;		
	КонецЕсли;
    	
	Выполнить ПараметрыОбъекта["Обработчик" + ВидОбработчика];	
	
КонецПроцедуры

Функция ЗначениеПеречисленияПоСинониму(ЗначениеСинонимаТекст, ИмяПеречисления)
	
	ЭлементПеречисления = Неопределено;
    Для каждого ТекЭлемент Из Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления Цикл
        Если ТекЭлемент.Синоним = ЗначениеСинонимаТекст Тогда
            ЭлементПеречисления = Перечисления[ИмяПеречисления][ТекЭлемент.Имя];
            Прервать;
        КонецЕсли;
    КонецЦикла; 
    
     Возврат ЭлементПеречисления;
	 
КонецФункции 
 
#КонецОбласти

#КонецЕсли

