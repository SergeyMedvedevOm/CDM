#Область ОбработчикиСобытийФормы
  
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Свойство("ИнформационныеБазы") Тогда
		Возврат
	КонецЕсли; 
	
	ТекущиеПрофили = Неопределено;
	Параметры.Свойство("ТекущиеПрофили", ТекущиеПрофили);
	
	ИнформационныеБазы = Параметры.ИнформационныеБазы;
	
	НайтиСовпадающиеПоКонфигурациямПрофилиГруппыДоступа(ИнформационныеБазы, ТекущиеПрофили);
					
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Результат = Новый Массив;   
	Для Каждого Стр Из ГруппыДоступа Цикл
		Если Стр.Пометка Тогда
			Результат.Добавить(Стр.Значение);	
		КонецЕсли;
	КонецЦикла;
	
	ДанныеЗаполнения = Новый Соответствие; 
	ДанныеЗаполнения.Вставить(Конфигурация, Результат);
	
	Закрыть(ДанныеЗаполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура КонфигурацияПриИзменении(Элемент)
	
	ЗаполнитьСписокГруппДоступаПоКонфигурации();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НайтиСовпадающиеПоКонфигурациямПрофилиГруппыДоступа(ИнформационныеБазы, ТекущиеПрофили)
	
	ГруппыДоступаПоКонфигурациям = Новый Соответствие;
	
	Запрос = Новый Запрос;  
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПрофилиГруппДоступаИнформационныхБаз.Имя КАК ГруппаДоступа,
		|	ПрофилиГруппДоступаИнформационныхБаз.Ссылка.Владелец КАК ИБ,
		|	ПрофилиГруппДоступаИнформационныхБаз.Ссылка.Владелец.Конфигурация КАК Конфигурация
		|ПОМЕСТИТЬ ГруппыДоступаИБ
		|ИЗ
		|	Справочник.ПрофилиГруппДоступаИнформационныхБаз.ГруппыДоступа КАК ПрофилиГруппДоступаИнформационныхБаз
		|ГДЕ
		|	ПрофилиГруппДоступаИнформационныхБаз.Ссылка.Владелец В(&ИнформационныеБазы)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ГруппыДоступаИБ.Конфигурация КАК Конфигурация,
		|	ГруппыДоступаИБ.ГруппаДоступа КАК ГруппаДоступа,
		|	КОЛИЧЕСТВО(ГруппыДоступаИБ.ГруппаДоступа) КАК ГруппаДоступаКоличество,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ГруппыДоступаИБ.ИБ) КАК ИБКоличество
		|ПОМЕСТИТЬ ГруппыДоступаПоКонфигурациям
		|ИЗ
		|	ГруппыДоступаИБ КАК ГруппыДоступаИБ
		|
		|СГРУППИРОВАТЬ ПО
		|	ГруппыДоступаИБ.Конфигурация,
		|	ГруппыДоступаИБ.ГруппаДоступа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИнформационныхБазПоКонфигурациям.Конфигурация КАК Конфигурация,
		|	ГруппыДоступаПоКонфигурациям.ГруппаДоступа КАК ГруппаДоступа
		|ИЗ
		|	ГруппыДоступаПоКонфигурациям КАК ГруппыДоступаПоКонфигурациям
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ГруппыДоступаПоКонфигурациям.Конфигурация КАК Конфигурация,
		|			МАКСИМУМ(ГруппыДоступаПоКонфигурациям.ИБКоличество) КАК ИБКоличество
		|		ИЗ
		|			ГруппыДоступаПоКонфигурациям КАК ГруппыДоступаПоКонфигурациям
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ГруппыДоступаПоКонфигурациям.Конфигурация) КАК ИнформационныхБазПоКонфигурациям
		|		ПО ГруппыДоступаПоКонфигурациям.Конфигурация = ИнформационныхБазПоКонфигурациям.Конфигурация
		|			И ГруппыДоступаПоКонфигурациям.ИБКоличество = ИнформационныхБазПоКонфигурациям.ИБКоличество
		|ИТОГИ ПО
		|	Конфигурация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ГруппыДоступаИБ.ГруппаДоступа КАК ГруппаДоступа,
		|	КОЛИЧЕСТВО(ГруппыДоступаИБ.ГруппаДоступа) КАК КоличествоГруппСОдинаковымИменем
		|ИЗ
		|	ГруппыДоступаИБ КАК ГруппыДоступаИБ
		|
		|СГРУППИРОВАТЬ ПО
		|	ГруппыДоступаИБ.ГруппаДоступа
		|
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(ГруппыДоступаИБ.ГруппаДоступа) = &КоличествоИБ И КОЛИЧЕСТВО(ГруппыДоступаИБ.ГруппаДоступа) > 1";
	
	Запрос.УстановитьПараметр("ИнформационныеБазы", ИнформационныеБазы);
	Запрос.УстановитьПараметр("КоличествоИБ", ИнформационныеБазы.Количество());
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();                                           
	
	ВыборкаКонфигурация = ПакетЗапросов[ПакетЗапросов.Количество()-2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);  
	Пока ВыборкаКонфигурация.Следующий() Цикл
		
		Выборка = ВыборкаКонфигурация.Выбрать();  
		
		ТекКонфигурация = ВыборкаКонфигурация.Конфигурация;		
		Элементы.Конфигурация.СписокВыбора.Добавить(ТекКонфигурация);   	
		
		ГруппыДоступаКонфигурации = Новый Массив;
		Пока Выборка.Следующий() Цикл
			ГруппыДоступаКонфигурации.Добавить(Выборка.ГруппаДоступа);	
		КонецЦикла; 	
		ГруппыДоступаПоКонфигурациям.Вставить(ТекКонфигурация, ГруппыДоступаКонфигурации);  
		
	КонецЦикла;	 
	      
	СовпадающиеПоВсемБазам = ПакетЗапросов[ПакетЗапросов.Количество()-1];
	Если СовпадающиеПоВсемБазам.Пустой() Тогда  
		
		Конфигурация = ТекКонфигурация;
		КэшГруппДоступаПоКонфигурациям = Новый ФиксированноеСоответствие(ГруппыДоступаПоКонфигурациям);   
		ГруппыДоступа.ЗагрузитьЗначения(КэшГруппДоступаПоКонфигурациям.Получить(Конфигурация));
		
		Если ЗначениеЗаполнено(ТекущиеПрофили) Тогда
			Для Каждого Стр Из ТекущиеПрофили Цикл
				ГруппыДоступа.НайтиПоЗначению(Стр).Пометка = Истина;		
			КонецЦикла;
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	ГруппыДоступаОбщие = Новый Массив;
	ВыборкаСовпадающиеПоВсемБазам = СовпадающиеПоВсемБазам.Выбрать();
	Пока ВыборкаСовпадающиеПоВсемБазам.Следующий() Цикл 
		ГруппыДоступаОбщие.Добавить(ВыборкаСовпадающиеПоВсемБазам.ГруппаДоступа);   	
	КонецЦикла;
	
	ВсеКонфигурации = Перечисления.КонфигурацииИнформационныхБаз.ПустаяСсылка();
	Элементы.Конфигурация.СписокВыбора.Добавить(ВсеКонфигурации, "Все конфигурации");
	
	ГруппыДоступаПоКонфигурациям.Вставить(ВсеКонфигурации, ГруппыДоступаОбщие);	
	КэшГруппДоступаПоКонфигурациям = Новый ФиксированноеСоответствие(ГруппыДоступаПоКонфигурациям); 
	ГруппыДоступа.ЗагрузитьЗначения(КэшГруппДоступаПоКонфигурациям.Получить(ВсеКонфигурации))
	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьСписокГруппДоступаПоКонфигурации() 
	
	ГруппыДоступа.Очистить();
	ГруппыДоступа.ЗагрузитьЗначения(КэшГруппДоступаПоКонфигурациям.Получить(Конфигурация));
	
КонецПроцедуры

#КонецОбласти
