#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Для внутреннего использования.
// 
Процедура ЗафиксироватьРезультатОбработкиОчереди(Параметры, Результат, ЕстьОшибки) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НачатьТранзакцию();
	Попытка
   		Блокировка = Новый БлокировкаДанных();
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ОчередьОбработкиДанных");
		ЭлементБлокировки.УстановитьЗначение("Идентификатор", Параметры.Идентификатор);
		ЭлементБлокировки.УстановитьЗначение("ВремяИнициации", Параметры.ВремяИнициации);
		Блокировка.Заблокировать(); 
		
		ОчередьОбработкиДанных = СоздатьМенеджерЗаписи();   
		ОчередьОбработкиДанных.Идентификатор = Параметры.Идентификатор;
		ОчередьОбработкиДанных.ВремяИнициации = Параметры.ВремяИнициации;  
		ОчередьОбработкиДанных.ОбменДанных = Параметры.ОбменДанных;
		ОчередьОбработкиДанных.ОбъектМетаданных = Параметры.ОбъектМетаданных;
		ОчередьОбработкиДанных.ИнформационнаяБаза = Параметры.ИнформационнаяБаза;  
		ОчередьОбработкиДанных.Прочитать();  		
		
		ОчередьОбработкиДанных.Обработано = Не ЕстьОшибки;
		ОчередьОбработкиДанных.Результат = Результат;
		
		Если Не ЕстьОшибки И ОчередьОбработкиДанных.Результат = "[]" И Параметры.ОчищатьОчередь Тогда
			ОчередьОбработкиДанных.Удалить();
		Иначе
			ОчередьОбработкиДанных.Записать(Истина);	
		КонецЕсли;
						
		ЗафиксироватьТранзакцию();    	
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;	
	КонецПопытки;
КонецПроцедуры


#КонецОбласти

#КонецЕсли
