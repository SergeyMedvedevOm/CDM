
#Область СлужебныеПроцедурыИФункции

Процедура МониторингЛицензий() Экспорт
	
	ПолучитьДанные();
	
КонецПроцедуры

#КонецОбласти


#Область ПолучениеСтатистики

Функция ПолучитьДанные(Сервер = Неопределено) Экспорт
	
	Успешно = Истина;
	
	ТаблицаДанных = РегистрыСведений.Статистика.СоздатьНаборЗаписей().Выгрузить();
	
	Если ЗаполнитьДанныеОЛицензиях(ТаблицаДанных, Сервер) Тогда
		СохранитьТаблицуДанных(ТаблицаДанных);
	Иначе
		Успешно = Ложь;
	КонецЕсли;
	
	Возврат Успешно;
	
КонецФункции

Функция ЗаполнитьДанныеОЛицензиях(ТаблицаДанных, Сервер)
		
	Период = ТекущаяДата();
	
	Попытка
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	СерверПриложений.Наименование КАК Наименование
		|ИЗ
		|	Справочник.СерверПриложений КАК СерверПриложений
		|ГДЕ
		|	СерверПриложений.МониторингБаз";
		//|	И &Ссылка В (Серверы.Ссылка, ЗНАЧЕНИЕ(Справочник.Серверы.ПустаяСсылка), НЕОПРЕДЕЛЕНО)";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		//Запрос.УстановитьПараметр("Ссылка", Сервер);
		
		СерверыВыборка = Запрос.Выполнить().Выбрать();
		Пока СерверыВыборка.Следующий() Цикл
			
			ДеревоЛицензий = ПолучитьДеревоЛицензийНаСервере(СерверыВыборка);
			
			Для Каждого СтрокаКластера ИЗ ДеревоЛицензий.Строки Цикл
				
				Для Каждого СтрокаБазы ИЗ СтрокаКластера.Строки Цикл
					
					Для Каждого СтрокаСессии ИЗ СтрокаБазы.Строки Цикл
						
						Для Каждого СтрокаЛицензии ИЗ СтрокаСессии.Строки Цикл
							
							СтрокаСоединения = ТаблицаДанных.Добавить();												
							СтрокаСоединения.УИДЗаписи						= Новый УникальныйИдентификатор();
							СтрокаСоединения.Период							= Период;
							СтрокаСоединения.Сервер							= СерверыВыборка.Наименование;
							СтрокаСоединения.База							= СтрокаЛицензии.База.Name;
							СтрокаСоединения.Пользователь					= СтрокаЛицензии.Сессия.UserName;
							СтрокаСоединения.ИдентификаторПриложения		= СтрокаЛицензии.Сессия.AppID;
							СтрокаСоединения.Приложение						= ПолучитьТипПриложения(СтрокаСоединения.ИдентификаторПриложения);
							СтрокаСоединения.Порт							= СтрокаЛицензии.Кластер.MainPort;
							СтрокаСоединения.Компьютер						= СтрокаЛицензии.Сессия.Host;
							СтрокаСоединения.КлючЗащиты						= ПолучитьИмяКлюча(СтрокаЛицензии.Лицензия.ShortPresentation);
							СтрокаСоединения.РасшифровкаКлюча				= СтрокаЛицензии.Лицензия.FullPresentation;
							СтрокаСоединения.СерияКлюча						= СтрокаЛицензии.Лицензия.Series;
							СтрокаСоединения.ФайлЛицензии					= СтрокаЛицензии.Лицензия.FileName;
							СтрокаСоединения.ИспользуемыхЛицензий			= 1;
							СтрокаСоединения.СетевойКлюч					= СтрокаЛицензии.Лицензия.Net;
							СтрокаСоединения.ПрограммнаяЛицензия			= СтрокаЛицензии.Лицензия.LicenseType = 0;
							СтрокаСоединения.ВыданаСервером					= СтрокаЛицензии.Лицензия.IssuedByServer;
							СтрокаСоединения.МакимальноеКоличествоЛицензий	= СтрокаЛицензии.Лицензия.MaxUsersAll;
							СтрокаСоединения.ВремяНачалаРаботы				= СтрокаЛицензии.Сессия.StartedAt;						
							
						КонецЦикла;
						
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	Исключение
		
		ЗаписьЖурналаРегистрации("Ошибка при получении данных о лицензиях", УровеньЖурналаРегистрации.Ошибка, , ОписаниеОшибки());
		
		Возврат Ложь;		
		
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

Функция ПолучитьДеревоЛицензийНаСервере(Сервер)
	
	ДеревоЛицензий = Новый ДеревоЗначений();
	ДеревоЛицензий.Колонки.Добавить("Кластер");
	ДеревоЛицензий.Колонки.Добавить("База");
	ДеревоЛицензий.Колонки.Добавить("Сессия");
	ДеревоЛицензий.Колонки.Добавить("Лицензия");
	
	ИмяСервера		= Сервер.Наименование;
	ИмяПользователя	= "";//Сервер.ИмяПользователя;
	Пароль			= "";//Сервер.Пароль; 
	
	Соединение = Новый COMОбъект("V83.COMConnector");
		
	Агент = Соединение.ConnectAgent(ИмяСервера);
		
	Кластеры = Агент.GetClusters(); 
	
	ВсегоКластеров = Кластеры.GetUpperBound();
	НачальныйКластер = Кластеры.GetLowerBound();
	
	Для ИндексКластера = НачальныйКластер По ВсегоКластеров Цикл
		
		ТекущийКластер = Кластеры.GetValue(ИндексКластера);
		
		Агент.Authenticate(ТекущийКластер, ИмяПользователя, Пароль);
		
		СтрокаКластера = ДеревоЛицензий.Строки.Добавить();
		СтрокаКластера.Кластер = ТекущийКластер;
				
		БазыДанных = Агент.GetInfoBases(ТекущийКластер);
		
		ВсегоБаз		= БазыДанных.GetUpperBound();
		НачальнаяБаза	= БазыДанных.GetLowerBound();
		
		Для ИндексБазыДанных = НачальнаяБаза По ВсегоБаз Цикл
			
			БазаДанных = БазыДанных.GetValue(ИндексБазыДанных);
			
			СтрокаБазыДанных = СтрокаКластера.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаБазыДанных, СтрокаКластера);			
			СтрокаБазыДанных.База = БазаДанных;
			
			Сессии = Агент.GetInfoBaseSessions(ТекущийКластер, БазаДанных);
			
			Для каждого Сессия из Сессии Цикл
				
				СтрокаСессии = СтрокаБазыДанных.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаСессии, СтрокаБазыДанных);
				СтрокаСессии.Сессия = Сессия;
				
				Лицензия = Сессия.License;
									
				Если Лицензия <> Неопределено Тогда						
					
					СтрокаЛицензии = СтрокаСессии.Строки.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаЛицензии, СтрокаСессии);					
					СтрокаЛицензии.Лицензия = Лицензия;
								
				КонецЕсли;	
				
			КонецЦикла;	
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ДеревоЛицензий;
	
КонецФункции

Функция ПолучитьТипПриложения(ИдентификаторПриложения)
	
	ID = НРег(ИдентификаторПриложения);
	
	Если ID = "1cv8" Тогда
		Возврат Перечисления.ТипыПриложений.ТолстыйКлиент;
	ИначеЕсли ID = "1cv8c" Тогда
		Возврат Перечисления.ТипыПриложений.ТонкийКлиент;
	ИначеЕсли ID = "designer" Тогда
		Возврат Перечисления.ТипыПриложений.Конфигуратор;
	ИначеЕсли ID = "webclient" Тогда
		Возврат Перечисления.ТипыПриложений.ВебКлиент;
	Иначе
		Возврат Перечисления.ТипыПриложений.ПустаяСсылка();
	КонецЕсли;
		
КонецФункции

Функция ПолучитьИмяКлюча(ОписаниеКлюча)
	
	Подстроки = СтрЗаменить(ОписаниеКлюча, ",", Символы.ПС);
	
	Если СтрЧислоСтрок(Подстроки) > 1 Тогда
		Возврат СокрЛП(СтрПолучитьСтроку(Подстроки, 2));
	Иначе
		Возврат ОписаниеКлюча;
	КонецЕсли;
	
КонецФункции

Функция СохранитьТаблицуДанных(ТаблицаДанных)
	
	Если ТаблицаДанных.Количество() > 0 Тогда		
		НаборЗаписей = РегистрыСведений.Статистика.СоздатьНаборЗаписей();	
		НаборЗаписей.Отбор.Период.Установить(ТаблицаДанных[0].Период);
		НаборЗаписей.Загрузить(ТаблицаДанных);		
		НаборЗаписей.Записать();
	КонецЕсли;
	
КонецФункции

#КонецОбласти

