#Область ПрограммныйИнтерфейс

Процедура ПриДобавленииПодсистемы(Описание) Экспорт
    Описание.Имя = "CDM";
    Описание.Версия = "2025.09.29.1";
    
    // Требуется библиотека стандартных подсистем.
    Описание.ТребуемыеПодсистемы.Добавить("СтандартныеПодсистемы");
КонецПроцедуры 

Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт     
	
	Обработчик = Обработчики.Добавить();
	Обработчик.ВыполнятьВГруппеОбязательных = Истина;
	Обработчик.ОбщиеДанные     = Истина;
	Обработчик.РежимВыполнения = "Оперативно";
	Обработчик.Версия          = "*";
	Обработчик.Приоритет       = 70;
	Обработчик.Процедура       = "ОбновлениеИнформационнойБазыCDM.УдалитьИнформационныеБазыПриУдаленииИерархии";
    
КонецПроцедуры 

Процедура ПередОбновлениемИнформационнойБазы() Экспорт
    
КонецПроцедуры    

Процедура ПослеОбновленияИнформационнойБазы(Знач ПредыдущаяВерсия, Знач ТекущаяВерсия,
        Знач ВыполненныеОбработчики, ВыводитьОписаниеОбновлений, МонопольныйРежим) Экспорт
    
КонецПроцедуры  
	
Процедура ПриПодготовкеМакетаОписанияОбновлений(Знач Макет) Экспорт
    
КонецПроцедуры  

Процедура ПриДобавленииОбработчиковПереходаСДругойПрограммы(Обработчики) Экспорт
    
КонецПроцедуры  

Процедура ПриОпределенииРежимаОбновленияДанных(РежимОбновленияДанных, СтандартнаяОбработка) Экспорт
    
КонецПроцедуры 

Процедура ПриЗавершенииПереходаСДругойПрограммы(Знач ПредыдущееИмяКонфигурации, Знач ПредыдущаяВерсияКонфигурации, Параметры) Экспорт
    
КонецПроцедуры

#КонецОбласти         

#Область СлужебныеПроцедурыИФункции 

Процедура УдалитьИнформационныеБазыПриУдаленииИерархии(Параметры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнформационныеБазы.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ИнформационныеБазы КАК ИнформационныеБазы
		|ГДЕ
		|	ИнформационныеБазы.СерверПриложений = ЗНАЧЕНИЕ(Справочник.СерверПриложений.ПустаяСсылка)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Блокировка = Новый БлокировкаДанных();
	Блокировка.Добавить("Справочник.ИнформационныеБазы");
	
	НачатьТранзакцию();
	Попытка
		
		Блокировка.Заблокировать();
		
		Пока Выборка.Следующий() Цикл
			
			ИнформационнаяБаза = Выборка.Ссылка.ПолучитьОбъект();
			ОбновлениеИнформационнойБазы.УдалитьДанные(ИнформационнаяБаза);
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти