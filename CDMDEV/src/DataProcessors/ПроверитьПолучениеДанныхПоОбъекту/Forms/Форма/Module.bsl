#Область ОбработчикиСобытийФормы   

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ОбъектМетаданных") Тогда
		ОбъектМетаданных = Параметры.ОбъектМетаданных;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	НастройкиАвторизации = ИнтеграцияКлиент.ПолучитьНастройкиАвторизации();
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеНастроекАвторизации" Тогда		
		НастройкиАвторизации = ИнтеграцияКлиент.ПолучитьНастройкиАвторизации();		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИБПриИзменении(Элемент)
	СформироватьСтрокуПодключения();
КонецПроцедуры 

&НаКлиенте
Процедура ОбъектМетаданныхПриИзменении(Элемент)
	СформироватьСтрокуПодключения();
КонецПроцедуры

&НаКлиенте 
Процедура ПолучитьДанные(Команда)
	
	ОчиститьСообщения();
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПолучитьДанныеНаСервере(); 
	
КонецПроцедуры

#КонецОбласти   

#Область СлужебныеПроцедурыИФункции   
 
&НаСервере
Процедура ПолучитьДанныеНаСервере()  
	
	Если НастройкиАвторизации.ИспользуетсяАутентификацияОС Тогда 
		Аутентификация = Новый Структура("Аутентификация", КоннекторHTTP.НоваяАутентификацияОС());		
	Иначе                                                    
		Аутентификация = Новый Структура("Аутентификация", Новый Структура("Пользователь, Пароль", НастройкиАвторизации.ИмяПользователя, НастройкиАвторизации.Пароль));	
	КонецЕсли;
	
	//NoDeletionMark,ElementsOnly
	ПараметрыЗапроса = ЗаполнитьПараметрыЗапроса();
		
	Ответ = КоннекторHTTP.Get(СтрокаПодключения,ПараметрыЗапроса,Аутентификация);
	ТекстОтвета = КоннекторHTTP.КакТекст(Ответ, КодировкаТекста.UTF8);

КонецПроцедуры  

Функция ЗаполнитьПараметрыЗапроса()
	
	ПараметрыЗапроса = Новый Структура;
	
	Если Не ПараметрыЗапросаСтрокой = "" Тогда
		МассивПодстрок = СтрРазделить(ПараметрыЗапросаСтрокой, ";");
		Для каждого Стр из МассивПодстрок Цикл 
			ЧастиПараметра = СтрРазделить(Стр, "=");
			ПараметрыЗапроса.Вставить(ЧастиПараметра[0], ЧастиПараметра[1]); 	
		КонецЦикла;		
	КонецЕсли;	
	
	Возврат ПараметрыЗапроса;

КонецФункции

&НаСервере
Процедура СформироватьСтрокуПодключения()     
	
	Запрос = Новый Запрос;  
	Запрос.УстановитьПараметр("ОбъектМетаданных", ОбъектМетаданных);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбъектыМетаданныхИнформационныхБаз.Владелец.Код КАК ВладелецКод,
		|	ОбъектыМетаданныхИнформационныхБаз.ПредставлениеВСервисе КАК ПредставлениеВСервисе
		|ИЗ
		|	Справочник.ОбъектыМетаданныхИнформационныхБаз КАК ОбъектыМетаданныхИнформационныхБаз
		|ГДЕ
		|	ОбъектыМетаданныхИнформационныхБаз.Ссылка = &ОбъектМетаданных";
	
	Выборка = Запрос.Выполнить().Выбрать();	
	Выборка.Следующий();  
	
	СтрокаПодключения = ИБ.ПутьНаВебСервере + "/hs/um/" + Выборка.ВладелецКод + "/" + Выборка.ПредставлениеВСервисе;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьВРегистр(Команда)
	ЗаписатьВРегистрНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаписатьВРегистрНаСервере() 
	
	Джэйсон = JSONПрочитать(ТекстОтвета);
	Для Каждого Стр Из Джэйсон Цикл
		Запись = РегистрыСведений.Мастерданные.СоздатьМенеджерЗаписи();
		Запись.Источник = ИБ;
		Запись.ОбъектМетаданных = ОбъектМетаданных; 
		Запись.Идентификатор = Стр.Ссылка;
		Запись.Представление = Стр.СсылкаПредставление;
		Запись.Содержание = JSONЗаписать(Стр);      
		Запись.Записать();
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция JSONПрочитать(Строка, ИменаСвойствТипаДата = "") Экспорт
	
	JSON = Новый ЧтениеJSON();
	JSON.УстановитьСтроку(Строка);
	
	Результат = ПрочитатьJSON(JSON, Ложь, СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаСвойствТипаДата,,, Истина));
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция JSONЗаписать(Значение) Экспорт
	
	Если Значение = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	JSON = Новый ЗаписьJSON();
	JSON.УстановитьСтроку();
	
	ЗаписатьJSON(JSON, Значение);
	
	Результат = JSON.Закрыть();
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗарегистрироватьОбъектНаСервере()
	
	Если НастройкиАвторизации.ИспользуетсяАутентификацияОС Тогда 
		Аутентификация = Новый Структура("Аутентификация", КоннекторHTTP.НоваяАутентификацияОС());		
	Иначе                                                    
		Аутентификация = Новый Структура("Аутентификация", Новый Структура("Пользователь, Пароль", НастройкиАвторизации.ИмяПользователя, НастройкиАвторизации.Пароль));	
	КонецЕсли; 
	
	ПараметрыЗапроса = Новый Структура("ПараметрыЗапроса", ЗаполнитьПараметрыЗапроса());		
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыЗапроса, Аутентификация);
	
	Ответ = КоннекторHTTP.Post(СтрокаПодключения, ТекстОтвета, ПараметрыЗапроса);
	ОбщегоНазначения.СообщитьПользователю(КоннекторHTTP.КакТекст(Ответ, КодировкаТекста.UTF8));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрироватьОбъект(Команда)
	ЗарегистрироватьОбъектНаСервере();
КонецПроцедуры

#КонецОбласти
