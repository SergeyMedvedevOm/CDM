&НаСервереБезКонтекста
Процедура СформироватьНаСервере(Диаграмма)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СеансыПользователей.ИнформационнаяБаза КАК ИнформационнаяБаза,
	|	СеансыПользователей.Пользователь КАК Пользователь,
	|	ВЫБОР
	|		КОГДА СеансыПользователей.Начало = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА НАЧАЛОПЕРИОДА(СеансыПользователей.Завершение, ДЕНЬ)
	|		ИНАЧЕ СеансыПользователей.Начало
	|	КОНЕЦ КАК НачалоПериода,
	|	ВЫБОР
	|		КОГДА СеансыПользователей.Завершение = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА КОНЕЦПЕРИОДА(СеансыПользователей.Начало, ДЕНЬ)
	|		ИНАЧЕ СеансыПользователей.Завершение
	|	КОНЕЦ КАК КонецПериода,
	|	РАЗНОСТЬДАТ(ВЫБОР
	|			КОГДА СеансыПользователей.Начало = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА НАЧАЛОПЕРИОДА(СеансыПользователей.Завершение, ДЕНЬ)
	|			ИНАЧЕ СеансыПользователей.Начало
	|		КОНЕЦ, ВЫБОР
	|			КОГДА СеансыПользователей.Завершение = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА КОНЕЦПЕРИОДА(СеансыПользователей.Начало, ДЕНЬ)
	|			ИНАЧЕ СеансыПользователей.Завершение
	|		КОНЕЦ, ЧАС) КАК ОбщаяДлительность
	|ИЗ
	|	РегистрСведений.СеансыПользователей КАК СеансыПользователей
	|ГДЕ
	|	НЕ(СеансыПользователей.Начало = ДАТАВРЕМЯ(1, 1, 1)
	|				И СеансыПользователей.Завершение = ДАТАВРЕМЯ(1, 1, 1))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОбщаяДлительность УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	ТЗ = РезультатЗапроса.Выгрузить();
	ТЗ.Сортировать("Пользователь, ИнформационнаяБаза");
	
	// Получаем уникальные
	ТЗПользователь = ТЗ.Скопировать();
	ТЗПользователь.Свернуть("Пользователь");
	
	// Получаем уникальные базы
	ТЗБазы = ТЗ.Скопировать();
	ТЗБазы.Свернуть("ИнформационнаяБаза");
	
	// Заполнение диаграммы Ганта
	Диаграмма.Обновление = Ложь;
	Диаграмма.Очистить();
	Диаграмма.ОтображатьЗаголовок = Ложь;
	Диаграмма.ОбластьЛегенды.Расположение = РасположениеЛегендыДиаграммы.Нет;
	
	//// Создаем серию для базы
	//Для каждого Стр Из ТЗБазы Цикл
	//	ИмяБазы = Стр.ИнформационнаяБаза;
		ИмяБазы = "Сеансы";
		СерияБазы = Диаграмма.УстановитьСерию(ИмяБазы);
		СерияБазы.Текст = ИмяБазы;
		СерияБазы.ШтриховкаПерекрывающихсяИнтервалов = Истина;
		СерияБазы.ПриоритетЦвета = Истина;
	//КонецЦикла;
	
	Для каждого СтрПользователь Из ТЗПользователь Цикл
		
		// Отбираем данные для текущей базы
		Отбор = Новый Структура("Пользователь", СтрПользователь.Пользователь);
		НайденныеСтроки = ТЗ.НайтиСтроки(Отбор);
		
		// Создаем точку
		Точка = Диаграмма.УстановитьТочку(СтрПользователь.Пользователь);
		Точка.Текст = СтрПользователь.Пользователь;
		
		// Создаем точки баз
		Для Каждого СтрокаДанных Из НайденныеСтроки Цикл
			
			//// Создаем серию для базы
			//ИмяБазы = СтрокаДанных.ИнформационнаяБаза;
			//СерияБазы = Диаграмма.УстановитьСерию(ИмяБазы);
			//СерияБазы.Текст = ИмяБазы;
			
			// Создаем базы с привязкой к значению пользователя
			//ТочкаБаза = Диаграмма.УстановитьТочку(СтрокаДанных.ИнформационнаяБаза, СтрокаДанных.Пользователь);
			//ТочкаБаза.Текст = СтрокаДанных.ИнформационнаяБаза;
			
			//СерияБазы = ПолучитьСериюПоЗначению(Диаграмма, СтрокаДанных.ИнформационнаяБаза);
			ТекущееЗначение = Диаграмма.ПолучитьЗначение(Точка, СерияБазы);
			
			ОтборСеансов = Новый Структура("Пользователь", СтрПользователь.Пользователь);
			ОтборСеансов.Вставить("ИнформационнаяБаза", СтрокаДанных.ИнформационнаяБаза);
			НайденныеСтрокиСеансов = ТЗ.НайтиСтроки(ОтборСеансов);
			
			Для Каждого СтрокаСеансов Из НайденныеСтрокиСеансов Цикл
				ТекущееЗначение.Данные.ИнформационнаяБаза = СтрокаДанных.ИнформационнаяБаза;
				ТекущийИнтервал = ТекущееЗначение.Добавить();
				ТекущийИнтервал.Начало = СтрокаДанных.НачалоПериода;
				ТекущийИнтервал.Конец  = СтрокаДанных.КонецПериода;
				//ТекущийИнтервал.Цвет   = ТочкаБаза.Цвет;
				ТекущийИнтервал.Текст  = СокрЛП(СтрокаДанных.ОбщаяДлительность);
				ТекущийИнтервал.Расшифровка = 
				СтрШаблон("%1 - %2 %3", 
				Формат(ТекущийИнтервал.Начало, "ДЛФ=T"), 
				Формат(ТекущийИнтервал.Конец, "ДЛФ=T"),
				СтрокаДанных.ИнформационнаяБаза);
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Диаграмма.Обновление = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьНаСервере(ЭтотОбъект.Диаграмма);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СформироватьНаСервере(ЭтотОбъект.Диаграмма);
КонецПроцедуры

//
&НаСервереБезКонтекста
Функция ПолучитьСериюПоЗначению(Диаграмма, Значение)

	Для инд=0 По Диаграмма.Серии.Количество() Цикл
	
		Если Диаграмма.Серии[инд].Значение = Значение Тогда
		
			Возврат Диаграмма.Серии[инд];
		
		КонецЕсли;
	
	КонецЦикла;

КонецФункции // ПолучитьСериюПоЗначению()
