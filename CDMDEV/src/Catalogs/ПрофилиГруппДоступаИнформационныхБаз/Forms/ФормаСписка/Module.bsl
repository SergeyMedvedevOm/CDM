#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	НастройкиАвторизации = ИнтеграцияКлиент.ПолучитьНастройкиАвторизации();
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеНастроекАвторизации" Тогда		
		НастройкиАвторизации = ИнтеграцияКлиент.ПолучитьНастройкиАвторизации();		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы 

&НаКлиенте
Процедура Заполнить(Команда) 
	
	ОчиститьСообщения();
	ЗаполнитьНаСервере();
	Элементы.Список.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции 

&НаСервере
Процедура ЗаполнитьНаСервере() 
	
	Если НастройкиАвторизации.ИспользуетсяАутентификацияОС Тогда 
		Аутентификация = Новый Структура("Аутентификация", КоннекторHTTP.НоваяАутентификацияОС());		
	Иначе                                                    
		Аутентификация = Новый Структура("Аутентификация", Новый Структура("Пользователь, Пароль", НастройкиАвторизации.ИмяПользователя, НастройкиАвторизации.Пароль));	
	КонецЕсли;
		
	Запрос = Новый Запрос; 
	Запрос.УстановитьПараметр("ВыделенныеСтроки", Элементы.Список.ВыделенныеСтроки);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПрофилиГруппДоступаИнформационныхБаз.Ссылка КАК Ссылка,
		|	ПрофилиГруппДоступаИнформационныхБаз.Владелец.ПутьНаВебСервере КАК ПутьНаВебСервере
		|ИЗ
		|	Справочник.ПрофилиГруппДоступаИнформационныхБаз КАК ПрофилиГруппДоступаИнформационныхБаз
		|ГДЕ
		|	ПрофилиГруппДоступаИнформационныхБаз.Ссылка В(&ВыделенныеСтроки)";
	
	РезультатЗапроса = Запрос.Выполнить();   
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл                      
		
		Попытка 
			
			//если ПоискПоПрофилю, то права добавляются по справочнику ПрофилиГруппДоступа, в противном случае - ГруппыДоступа.
			Ответ = Интеграция.ОбратитьсяКВебСервису(Выборка.ПутьНаВебСервере, "GET", "DataProcessings/UserAccessGroupsSettings", Аутентификация);
			Если ТипЗнч(Ответ) = Тип("Структура") И Ответ.Свойство("error") И Ответ.error Тогда
				ОбщегоНазначения.СообщитьПользователю("Ошибка при получении информации о настройках добавления пользователей по адресу " + Выборка.ПутьНаВебСервере + Символы.ПС + Ответ.message);
				Продолжить;
			КонецЕсли;
			
			ИмяСправочникаПоиска = ?(Ответ.ПоискПоПрофилю, "Catalogs/AccessGroupProfiles", "Catalogs/AccessGroups");
				
			ПараметрыЗапроса = Новый Структура("ElementsOnly, NoDeletionMark, Fields", Истина, Истина, "Наименование");   		                              
			Ответ = Интеграция.ОбратитьсяКВебСервису(Выборка.ПутьНаВебСервере, "GET", ИмяСправочникаПоиска, Аутентификация, ПараметрыЗапроса);			
			Если ТипЗнч(Ответ) = Тип("Структура") И Ответ.Свойство("error") И Ответ.error Тогда
				ОбщегоНазначения.СообщитьПользователю("Ошибка при получении информации о профилях по адресу " + Выборка.ПутьНаВебСервере + Символы.ПС + Ответ.message);
				Продолжить;
			КонецЕсли;  
			
			ЗаполнитьПрофилиГруппДоступаПоОтветуСервиса(Ответ, Выборка.Ссылка);			
			
		Исключение
			ОбщегоНазначения.СообщитьПользователю("Ошибка при подключении по адресу " + URL + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())); 
		КонецПопытки;
					
	КонецЦикла;
		
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьПрофилиГруппДоступаПоОтветуСервиса(Ответ, ПрофильСсылка)
	
	ИменаПрофилейГруппДоступа = Новый Массив; 		
	Для Каждого Стр ИЗ Ответ Цикл   
		ИменаПрофилейГруппДоступа.Добавить(СокрЛП(Стр.Наименование));			
	КонецЦикла;   		
	ИменаПрофилейГруппДоступа = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ИменаПрофилейГруппДоступа);  
	
	Если ИменаПрофилейГруппДоступа.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПрофильГруппДоступа = ПрофильСсылка.ПолучитьОбъект(); 
	ПрофильГруппДоступа.ГруппыДоступа.Очистить();
	Для Каждого Стр Из ИменаПрофилейГруппДоступа Цикл			
		НовСтр = ПрофильГруппДоступа.ГруппыДоступа.Добавить();
		НовСтр.Имя = Стр; 
	КонецЦикла;
	ПрофильГруппДоступа.Записать();
	
КонецПроцедуры

#КонецОбласти
